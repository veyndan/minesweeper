{"version":3,"sources":["mines.js"],"names":[],"mappings":"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","file":"mines-compiled.js","sourcesContent":["\"use strict\";\n\n$(document).ready(function () {\n    var game = {\n        isFirstReveal: true,\n        rows: 9,\n        cols: 9,\n        mines: 10,\n        board: [],\n        newGame: function () {\n            for (let row = 0; row < this.rows; row++) {\n                this.board[row] = [];\n                this.board[row].length = this.rows;\n                for (var col = 0; col < this.cols; col++) {\n                    this.board[row][col] = {\n                        value: 0,\n                        revealed: false,\n                        flagged: false\n                    };\n                }\n            }\n\n            $('#mine-count').text(this.mines);\n        },\n        initialize: function (row, col) {\n            for (var i = 0; i < this.mines; i++) {\n                do {\n                    var mineRow = Math.floor(Math.random() * this.rows);\n                    var mineCol = Math.floor(Math.random() * this.cols);\n                } while (this.board[mineRow][mineCol].value === -1 || (mineRow === row && mineCol === col));\n                this.board[mineRow][mineCol].value = -1;\n\n                surrounding(this.rows, this.cols, mineRow, mineCol)\n                    .map(elem => this.board[elem.row][elem.col])\n                    .filter(cell => cell.value >= 0)\n                    .forEach(cell => cell.value++);\n            }\n        }\n    };\n\n    game.newGame();\n\n    for (let row = 0; row < game.rows; row++) {\n        const tr = $(document.createElement('tr')).appendTo($('#grid'));\n        for (let col = 0; col < game.cols; col++) {\n            const td = $(document.createElement('td')).prop('id', cellId(row, col, game.cols));\n            td.click({game, row, col}, reveal);\n            td.contextmenu({game, row, col}, toggleFlag);\n            tr.append(td);\n        }\n    }\n});\n\nfunction reveal(event) {\n    const {game, row, col} = event.data;\n    const cell = game.board[row][col];\n\n    if (game.isFirstReveal) {\n        game.initialize(row, col);\n        game.isFirstReveal = false;\n    }\n\n    if (!cell.revealed && !cell.flagged) {\n        game.board[row][col].revealed = true;\n        const value = game.board[row][col].value;\n        const element = $(`#${cellId(row, col, game.cols)}`);\n        element.addClass('revealed');\n        if (value === -1) {\n            element.addClass('mine');\n        }\n        element.text(value > 0 ? value : '');\n    }\n}\n\nfunction toggleFlag(event) {\n    const {game, row, col} = event.data;\n    game.board[row][col].flagged = !game.board[row][col].flagged;\n\n    if (!game.board[row][col].revealed) {\n        $(this).toggleClass('flag');\n    }\n\n    const mineCount = $('#mine-count');\n    if (game.board[row][col].flagged) {\n        mineCount.text(Number(mineCount.text()) - 1);\n    } else {\n        mineCount.text(Number(mineCount.text()) + 1);\n    }\n\n    return false;\n}\n\nfunction surrounding(rows, cols, row, col) {\n    const result = [];\n    for (let rowSurrounding = Math.max(0, row - 1); rowSurrounding <= Math.min(rows - 1, row + 1); rowSurrounding++) {\n        for (let colSurrounding = Math.max(0, col - 1); colSurrounding <= Math.min(cols - 1, col + 1); colSurrounding++) {\n            if (!(rowSurrounding === row && colSurrounding === col)) {\n                result.push({row: rowSurrounding, col: colSurrounding});\n            }\n        }\n    }\n    return result;\n}\n\nfunction cellId(row, col, cols) {\n    return row * cols + col;\n}\n"]}