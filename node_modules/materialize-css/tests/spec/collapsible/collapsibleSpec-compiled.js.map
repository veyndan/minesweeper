{"version":3,"sources":["collapsibleSpec.js"],"names":[],"mappings":"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","file":"collapsibleSpec-compiled.js","sourcesContent":["describe( \"Collapsible Plugin\", function () {\n  var collapsible, accordion;\n\n  beforeEach(function() {\n    loadFixtures('collapsible/collapsible.html');\n    collapsible = $('.collapsible');\n    accordion = $('.accordion');\n    popout = $('.popout');\n    collapsible.collapsible();\n  });\n\n  describe( \"collapsible\", function () {\n\n    it(\"should open all items, keeping all open\", function () {\n      // Collapsible body height should be 0 on start when hidden.\n      var headers = collapsible.find('.collapsible-header');\n      var bodies = collapsible.find('.collapsible-body');\n\n      bodies.each(function() {\n        expect($(this)).toBeHidden('because collapsible bodies should be hidden initially.');\n      });\n\n      // Collapsible body height should be > 0 after being opened.\n      headers.each(function() {\n        $(this).click();\n      });\n      bodies.each(function() {\n        expect($(this)).toBeVisible('because collapsible bodies not visible after being opened.');\n      });\n    });\n  });\n\n  describe( \"accordion\", function () {\n\n    it(\"should open first and second items, keeping only second open\", function (done) {\n      // Collapsible body height should be 0 on start when hidden.\n      var firstHeader = accordion.find('.collapsible-header').first();\n      var firstBody = accordion.find('.collapsible-body').first();\n      var secondHeader = accordion.find('.collapsible-header').eq(1);\n      var secondBody = accordion.find('.collapsible-body').eq(1);\n      expect(firstBody).toBeHidden('because accordion bodies should be hidden initially.');\n      expect(secondBody).toBeHidden('because accordion bodies should be hidden initially.');\n\n      // Collapsible body height should be > 0 after being opened.\n      firstHeader.click();\n\n      setTimeout(function() {\n        expect(firstBody).toBeVisible('because accordion bodies not visible after being opened.');\n        secondHeader.click();\n\n        setTimeout(function() {\n          expect(firstBody).toBeHidden('because accordion bodies should be hidden when another item is opened.');\n          expect(secondBody).toBeVisible('because accordion bodies not visible after being opened.');\n          done();\n        }, 400);\n      }, 200);\n\n    });\n  });\n\n  describe( \"popout\", function () {\n\n    it(\"should open first and popout\", function (done) {\n      // Collapsible body height should be 0 on start when hidden.\n      var firstLi = popout.find('li').first();\n      var firstHeader = popout.find('.collapsible-header').first();\n      var firstBody = popout.find('.collapsible-body').first();\n      expect(firstBody).toBeHidden('because accordion bodies should be hidden initially.');\n\n      // Expect margin to be > 0 because not popped out.\n      popout.find('li').each(function () {\n        var marginLeft = parseInt($(this).css('margin-left'));\n        var marginRight = parseInt($(this).css('margin-right'));\n        expect(marginLeft).toBeGreaterThan(0, 'because closed popout items should have horizontal margins.');\n        expect(marginRight).toBeGreaterThan(0, 'because closed popout items should have horizontal margins.');\n      });\n\n      // expect margin to be 0 because popped out.\n      firstHeader.click();\n      setTimeout(function() {\n        var firstMarginLeft = parseInt(firstLi.css('margin-left'));\n        var firstMarginRight = parseInt(firstLi.css('margin-right'));\n        expect(firstMarginLeft).toEqual(0, 'because opened popout items should have no horizontal margins.');\n        expect(firstMarginRight).toEqual(0, 'because opened popout items should have no horizontal margins.');\n        expect(firstBody).toBeVisible('because accordion bodies not visible after being opened.');\n\n        done();\n      }, 400);\n\n    });\n  });\n});\n"]}