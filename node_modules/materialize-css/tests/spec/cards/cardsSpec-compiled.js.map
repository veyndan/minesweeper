{"version":3,"sources":["cardsSpec.js"],"names":[],"mappings":"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","file":"cardsSpec-compiled.js","sourcesContent":["describe( \"Cards\", function () {\n  var reveal;\n\n  beforeEach(function() {\n    loadFixtures('cards/cardsFixture.html');\n  });\n\n  describe(\"reveal cards\", function () {\n    var revealCard;\n\n    beforeEach(function() {\n      revealCard = $('.card.reveal');\n    });\n\n    it(\"should have a hidden card-reveal\", function (done) {\n      var revealDiv = revealCard.find('.card-reveal');\n      var activator = revealCard.find('.activator');\n\n      expect(revealDiv).toBeHidden('reveal div should be hidden initially');\n\n      activator.click();\n\n      setTimeout(function() {\n        expect(revealDiv).toBeVisible('reveal did not appear after activator was clicked.');\n\n        // Check revealDiv covers reveal card.\n        expect(revealDiv.outerWidth()).toEqual(revealCard.outerWidth(), 'activator was not as wide as reveal card.');\n        expect(revealDiv.outerHeight()).toEqual(revealCard.outerHeight(), 'activator was not as high as reveal card.');\n        expect(revealDiv.offset().top).toEqual(revealCard.offset().top, 'activator was not as in the same y as reveal card.');\n        expect(revealDiv.offset().left).toEqual(revealCard.offset().left, 'activator was not as in the same x as reveal card.');\n\n        done();\n      }, 400);\n\n    });\n  });\n\n  describe(\"image cards\", function () {\n    var imageCard;\n\n    beforeEach(function() {\n      imageCard = $('.card.image');\n    });\n\n    it(\"should have an image that fills to full width of card\", function () {\n      var image = imageCard.find('.card-image > img');\n\n      expect(image.outerWidth()).toEqual(imageCard.outerWidth(), 'image does not fill width of card');\n      expect(image.offset().top).toEqual(imageCard.offset().top, 'image was not as in the same y as card.');\n    });\n  });\n\n\n  describe(\"sized cards\", function () {\n    var small, medium, large;\n\n    beforeEach(function() {\n      small = $('.card.small');\n      medium = $('.card.medium');\n      large = $('.card.large');\n    });\n\n    it(\"should have small card dimensions\", function () {\n      var cardImage = small.find('.card-image');\n      var cardContent = small.find('.card-content');\n      var cardAction = small.find('.card-action');\n\n      expect(small.outerHeight()).toEqual(300, 'small card should be 300px high');\n      expect(cardImage.outerHeight()).toBeLessThan(181, 'small image should be <= 180px or 60% high');\n      expect(cardContent.outerHeight()).toBeLessThan(121, 'small content should be <= 120px or 40% high');\n      expect(cardAction.offset().top + cardAction.outerHeight())\n        .toEqual(small.offset().top + small.outerHeight(), 'small action should be at bottom of card');\n    });\n\n    it(\"should have medium card dimensions\", function () {\n      var cardImage = medium.find('.card-image');\n      var cardContent = medium.find('.card-content');\n      var cardAction = medium.find('.card-action');\n\n      expect(medium.outerHeight()).toEqual(400, 'medium card should be 400px high');\n      expect(cardImage.outerHeight()).toBeLessThan(241, 'medium image should be <= 240 or 60% high');\n      expect(cardContent.outerHeight()).toBeLessThan(161, 'medium content should be <= 160px or 40% high');\n      expect(cardAction.offset().top + cardAction.outerHeight())\n        .toEqual(medium.offset().top + medium.outerHeight(), 'medium action should be at bottom of card');\n    });\n\n    it(\"should have large card dimensions\", function () {\n      var cardImage = large.find('.card-image');\n      var cardContent = large.find('.card-content');\n      var cardAction = large.find('.card-action');\n\n      expect(large.outerHeight()).toEqual(500, 'large card should be 500px high');\n      expect(cardImage.outerHeight()).toBeLessThan(301, 'large image should be <= 300 or 60% high');\n      expect(cardContent.outerHeight()).toBeLessThan(201, 'large content should be <= 200 or 40% high');\n      expect(cardAction.offset().top + cardAction.outerHeight())\n        .toEqual(large.offset().top + large.outerHeight(), 'large action should be at bottom of card');\n    });\n  });\n\n});\n"]}