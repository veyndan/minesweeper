{"version":3,"sources":["character_counter.js"],"names":[],"mappings":"AAAC,WAAU,CAAV,EAAa;;AAEZ,IAAE,EAAF,CAAK,gBAAL,GAAwB,YAAU;AAChC,WAAO,KAAK,IAAL,CAAU,YAAU;AACzB,UAAI,SAAS,EAAE,IAAF,CAAb;AACA,UAAI,kBAAkB,OAAO,MAAP,GAAgB,IAAhB,CAAqB,iCAArB,CAAtB;;;AAGA,UAAI,gBAAgB,MAApB,EAA4B;AAC1B;AACD;;AAED,UAAI,uBAAuB,OAAO,IAAP,CAAY,QAAZ,MAA0B,SAArD;;AAEA,UAAG,oBAAH,EAAwB;AACtB,eAAO,EAAP,CAAU,OAAV,EAAmB,aAAnB;AACA,eAAO,EAAP,CAAU,OAAV,EAAmB,aAAnB;AACA,eAAO,EAAP,CAAU,MAAV,EAAkB,oBAAlB;;AAEA,0BAAkB,MAAlB;AACD;AAEF,KAnBM,CAAP;AAoBD,GArBD;;AAuBA,WAAS,aAAT,GAAwB;AACtB,QAAI,YAAgB,CAAC,EAAE,IAAF,EAAQ,IAAR,CAAa,QAAb,CAArB;AAAA,QACA,eAAoB,CAAC,EAAE,IAAF,EAAQ,GAAR,GAAc,MADnC;AAAA,QAEA,gBAAoB,gBAAgB,SAFpC;;AAIA,MAAE,IAAF,EAAQ,MAAR,GAAiB,IAAjB,CAAsB,iCAAtB,EACiB,IADjB,CACuB,eAAe,GAAf,GAAqB,SAD5C;;AAGA,kBAAc,aAAd,EAA6B,EAAE,IAAF,CAA7B;AACD;;AAED,WAAS,iBAAT,CAA2B,MAA3B,EAAmC;AACjC,QAAI,kBAAkB,OAAO,MAAP,GAAgB,IAAhB,CAAqB,iCAArB,CAAtB;;AAEA,QAAI,gBAAgB,MAApB,EAA4B;AAC1B;AACD;;AAED,sBAAkB,EAAE,SAAF,EACG,QADH,CACY,mBADZ,EAEG,GAFH,CAEO,OAFP,EAEe,OAFf,EAGG,GAHH,CAGO,WAHP,EAGmB,MAHnB,EAIG,GAJH,CAIO,QAJP,EAIiB,CAJjB,CAAlB;;AAMA,WAAO,MAAP,GAAgB,MAAhB,CAAuB,eAAvB;AACD;;AAED,WAAS,oBAAT,GAA+B;AAC7B,MAAE,IAAF,EAAQ,MAAR,GAAiB,IAAjB,CAAsB,iCAAtB,EAAyD,IAAzD,CAA8D,EAA9D;AACD;;AAED,WAAS,aAAT,CAAuB,aAAvB,EAAsC,MAAtC,EAA6C;AAC3C,QAAI,uBAAuB,OAAO,QAAP,CAAgB,SAAhB,CAA3B;AACA,QAAI,iBAAiB,oBAArB,EAA2C;AACzC,aAAO,WAAP,CAAmB,SAAnB;AACD,KAFD,MAGK,IAAG,CAAC,aAAD,IAAkB,CAAC,oBAAtB,EAA2C;AAC9C,aAAO,WAAP,CAAmB,OAAnB;AACA,aAAO,QAAP,CAAgB,SAAhB;AACD;AACF;;AAED,IAAE,QAAF,EAAY,KAAZ,CAAkB,YAAU;AAC1B,MAAE,iBAAF,EAAqB,gBAArB;AACD,GAFD;AAID,CAvEA,EAuEE,MAvEF,CAAD","file":"character_counter-compiled.js","sourcesContent":["(function ($) {\n\n  $.fn.characterCounter = function(){\n    return this.each(function(){\n      var $input = $(this);\n      var $counterElement = $input.parent().find('span[class=\"character-counter\"]');\n\n      // character counter has already been added appended to the parent container\n      if ($counterElement.length) {\n        return;\n      }\n\n      var itHasLengthAttribute = $input.attr('length') !== undefined;\n\n      if(itHasLengthAttribute){\n        $input.on('input', updateCounter);\n        $input.on('focus', updateCounter);\n        $input.on('blur', removeCounterElement);\n\n        addCounterElement($input);\n      }\n\n    });\n  };\n\n  function updateCounter(){\n    var maxLength     = +$(this).attr('length'),\n    actualLength      = +$(this).val().length,\n    isValidLength     = actualLength <= maxLength;\n\n    $(this).parent().find('span[class=\"character-counter\"]')\n                    .html( actualLength + '/' + maxLength);\n\n    addInputStyle(isValidLength, $(this));\n  }\n\n  function addCounterElement($input) {\n    var $counterElement = $input.parent().find('span[class=\"character-counter\"]');\n\n    if ($counterElement.length) {\n      return;\n    }\n\n    $counterElement = $('<span/>')\n                        .addClass('character-counter')\n                        .css('float','right')\n                        .css('font-size','12px')\n                        .css('height', 1);\n\n    $input.parent().append($counterElement);\n  }\n\n  function removeCounterElement(){\n    $(this).parent().find('span[class=\"character-counter\"]').html('');\n  }\n\n  function addInputStyle(isValidLength, $input){\n    var inputHasInvalidClass = $input.hasClass('invalid');\n    if (isValidLength && inputHasInvalidClass) {\n      $input.removeClass('invalid');\n    }\n    else if(!isValidLength && !inputHasInvalidClass){\n      $input.removeClass('valid');\n      $input.addClass('invalid');\n    }\n  }\n\n  $(document).ready(function(){\n    $('input, textarea').characterCounter();\n  });\n\n}( jQuery ));\n"]}