{"version":3,"sources":["load.js"],"names":[],"mappings":"AAAA,OAAQ,CACP,SADO,EAEP,mBAFO,EAGP,SAHO,EAIP,eAJO,EAKP,iBALO,EAMP,aANO;;;AASP,gBATO,CAAR,EAUG,UAAU,MAAV,EAAmB;;;AAGtB,KAAI,QAAQ,OAAO,EAAP,CAAU,IAAtB;;;;;AAKA,QAAO,EAAP,CAAU,IAAV,GAAiB,UAAU,GAAV,EAAe,MAAf,EAAuB,QAAvB,EAAkC;AAClD,MAAK,OAAO,GAAP,KAAe,QAAf,IAA2B,KAAhC,EAAwC;AACvC,UAAO,MAAM,KAAN,CAAa,IAAb,EAAmB,SAAnB,CAAP;AACA;;AAED,MAAI,QAAJ;AAAA,MAAc,IAAd;AAAA,MAAoB,QAApB;AAAA,MACC,OAAO,IADR;AAAA,MAEC,MAAM,IAAI,OAAJ,CAAa,GAAb,CAFP;;AAIA,MAAK,MAAM,CAAC,CAAZ,EAAgB;AACf,cAAW,OAAO,IAAP,CAAa,IAAI,KAAJ,CAAW,GAAX,CAAb,CAAX;AACA,SAAM,IAAI,KAAJ,CAAW,CAAX,EAAc,GAAd,CAAN;AACA;;;AAGD,MAAK,OAAO,UAAP,CAAmB,MAAnB,CAAL,EAAmC;;;AAGlC,cAAW,MAAX;AACA,YAAS,SAAT;;;AAGA,GAPD,MAOO,IAAK,UAAU,OAAO,MAAP,KAAkB,QAAjC,EAA4C;AAClD,UAAO,MAAP;AACA;;;AAGD,MAAK,KAAK,MAAL,GAAc,CAAnB,EAAuB;AACtB,UAAO,IAAP,CAAa;AACZ,SAAK,GADO;;;;;AAMZ,UAAM,QAAQ,KANF;AAOZ,cAAU,MAPE;AAQZ,UAAM;AARM,IAAb,EASI,IATJ,CASU,UAAU,YAAV,EAAyB;;;AAGlC,eAAW,SAAX;;AAEA,SAAK,IAAL,CAAW;;;;AAIV,WAAQ,OAAR,EAAkB,MAAlB,CAA0B,OAAO,SAAP,CAAkB,YAAlB,CAA1B,EAA6D,IAA7D,CAAmE,QAAnE,CAJU;;;AAOV,gBAPD;;;;;AAYA,IA1BD,EA0BI,MA1BJ,CA0BY,YAAY,UAAU,KAAV,EAAiB,MAAjB,EAA0B;AACjD,SAAK,IAAL,CAAW,YAAW;AACrB,cAAS,KAAT,CAAgB,IAAhB,EAAsB,YAAY,CAAE,MAAM,YAAR,EAAsB,MAAtB,EAA8B,KAA9B,CAAlC;AACA,KAFD;AAGA,IA9BD;AA+BA;;AAED,SAAO,IAAP;AACA,EA9DD;AAgEC,CAlFD","file":"load-compiled.js","sourcesContent":["define( [\n\t\"../core\",\n\t\"../core/parseHTML\",\n\t\"../ajax\",\n\t\"../traversing\",\n\t\"../manipulation\",\n\t\"../selector\",\n\n\t// Optional event/alias dependency\n\t\"../event/alias\"\n], function( jQuery ) {\n\n// Keep a copy of the old load method\nvar _load = jQuery.fn.load;\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tif ( typeof url !== \"string\" && _load ) {\n\t\treturn _load.apply( this, arguments );\n\t}\n\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = jQuery.trim( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( jQuery.isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n} );\n"]}