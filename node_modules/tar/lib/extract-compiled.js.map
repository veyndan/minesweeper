{"version":3,"sources":["extract.js"],"names":[],"mappings":";;AAEA,OAAO,OAAP,GAAiB,OAAjB;;AAEA,IAAI,MAAM,QAAQ,WAAR,CAAV;AAAA,IACI,UAAU,QAAQ,SAAR,CADd;AAAA,IAEI,WAAW,QAAQ,UAAR,CAFf;AAAA,IAGI,OAAO,QAAQ,MAAR,CAHX;;AAKA,SAAS,OAAT,CAAkB,IAAlB,EAAwB;AACtB,MAAI,EAAE,gBAAgB,OAAlB,CAAJ,EAAgC,OAAO,IAAI,OAAJ,CAAY,IAAZ,CAAP;AAChC,MAAI,KAAJ,CAAU,KAAV,CAAgB,IAAhB;;;AAGA,OAAK,IAAL,GAAY,WAAZ;AACA,OAAK,SAAL,GAAiB,IAAjB;;AAEA,MAAI,OAAO,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO,EAAE,MAAM,IAAR,EAAP;AACD;;;AAGD,OAAK,IAAL,GAAY,KAAK,IAAL,IAAa,KAAK,OAAL,CAAa,kBAAb,CAAzB;AACA,OAAK,IAAL,GAAY,WAAZ;AACA,OAAK,SAAL,GAAiB,IAAjB;;;AAGA,OAAK,KAAL,GAAa,CAAC,KAAK,KAAnB;AACA,MAAI,CAAC,KAAK,KAAN,IAAe,KAAK,KAAL,IAAc,CAAjC,EAAoC,KAAK,KAAL,GAAa,CAAb;;AAEpC,OAAK,IAAL,GAAY,QAAQ,MAAR,CAAe,IAAf,CAAZ;;AAEA,OAAK,KAAL;AACA,MAAI,KAAK,IAAT;;;;;AAKA,KAAG,EAAH,CAAM,OAAN,EAAe,UAAU,KAAV,EAAiB;;;AAG9B,QAAI,KAAK,KAAT,EAAgB;AACd,UAAI,IAAI,MAAM,IAAN,CAAW,KAAX,CAAiB,GAAjB,EAAsB,KAAtB,CAA4B,KAAK,KAAjC,EAAwC,IAAxC,CAA6C,GAA7C,CAAR;AACA,YAAM,IAAN,GAAa,MAAM,KAAN,CAAY,IAAZ,GAAmB,CAAhC;AACA,UAAI,MAAM,QAAV,EAAoB;AAClB,YAAI,KAAK,MAAM,QAAN,CAAe,KAAf,CAAqB,GAArB,EAA0B,KAA1B,CAAgC,KAAK,KAArC,EAA4C,IAA5C,CAAiD,GAAjD,CAAT;AACA,cAAM,QAAN,GAAiB,MAAM,KAAN,CAAY,QAAZ,GAAuB,EAAxC;AACD;AACF;AACD,QAAI,MAAM,IAAN,KAAe,MAAnB,EAA2B;AAC3B,UAAM,QAAN,GAAiB,MAAM,KAAN,CAAY,QAAZ,GACf,KAAK,IAAL,CAAU,KAAK,IAAf,EAAqB,KAAK,IAAL,CAAU,GAAV,EAAe,MAAM,KAAN,CAAY,QAA3B,CAArB,CADF;AAED,GAdD;;AAgBA,OAAK,IAAL,CAAU,EAAV,CAAa,OAAb,EAAsB,YAAY;AAChC,OAAG,IAAH,CAAQ,GAAG,IAAX,EAAiB,EAAE,KAAK,KAAP,EAAjB;AACA,OAAG,MAAH;AACD,GAHD;;;;;;AASA,OAAK,IAAL,CAAU,EAAV,CAAa,OAAb,EAAsB,YAAY;;AAEhC,OAAG,IAAH,CAAQ,KAAR;AACA,OAAG,IAAH,CAAQ,OAAR;AACD,GAJD;AAKD;;AAED,SAAS,OAAT,EAAkB,IAAI,KAAtB;;AAEA,QAAQ,SAAR,CAAkB,UAAlB,GAA+B,YAAY;AACzC,MAAI,KAAK,IAAT;AACA,MAAI,CAAC,GAAG,MAAR,EAAgB,GAAG,KAAH,CAAS,gBAAT;AAChB,KAAG,IAAH,CAAQ,GAAR;;AAED,CALD","file":"extract-compiled.js","sourcesContent":["// give it a tarball and a path, and it'll dump the contents\n\nmodule.exports = Extract\n\nvar tar = require(\"../tar.js\")\n  , fstream = require(\"fstream\")\n  , inherits = require(\"inherits\")\n  , path = require(\"path\")\n\nfunction Extract (opts) {\n  if (!(this instanceof Extract)) return new Extract(opts)\n  tar.Parse.apply(this)\n\n  // have to dump into a directory\n  opts.type = \"Directory\"\n  opts.Directory = true\n\n  if (typeof opts !== \"object\") {\n    opts = { path: opts }\n  }\n\n  // better to drop in cwd? seems more standard.\n  opts.path = opts.path || path.resolve(\"node-tar-extract\")\n  opts.type = \"Directory\"\n  opts.Directory = true\n\n  // similar to --strip or --strip-components\n  opts.strip = +opts.strip\n  if (!opts.strip || opts.strip <= 0) opts.strip = 0\n\n  this._fst = fstream.Writer(opts)\n\n  this.pause()\n  var me = this\n\n  // Hardlinks in tarballs are relative to the root\n  // of the tarball.  So, they need to be resolved against\n  // the target directory in order to be created properly.\n  me.on(\"entry\", function (entry) {\n    // if there's a \"strip\" argument, then strip off that many\n    // path components.\n    if (opts.strip) {\n      var p = entry.path.split(\"/\").slice(opts.strip).join(\"/\")\n      entry.path = entry.props.path = p\n      if (entry.linkpath) {\n        var lp = entry.linkpath.split(\"/\").slice(opts.strip).join(\"/\")\n        entry.linkpath = entry.props.linkpath = lp\n      }\n    }\n    if (entry.type !== \"Link\") return\n    entry.linkpath = entry.props.linkpath =\n      path.join(opts.path, path.join(\"/\", entry.props.linkpath))\n  })\n\n  this._fst.on(\"ready\", function () {\n    me.pipe(me._fst, { end: false })\n    me.resume()\n  })\n\n  // this._fst.on(\"end\", function () {\n  //   console.error(\"\\nEEEE Extract End\", me._fst.path)\n  // })\n\n  this._fst.on(\"close\", function () {\n    // console.error(\"\\nEEEE Extract End\", me._fst.path)\n    me.emit(\"end\")\n    me.emit(\"close\")\n  })\n}\n\ninherits(Extract, tar.Parse)\n\nExtract.prototype._streamEnd = function () {\n  var me = this\n  if (!me._ended) me.error(\"unexpected eof\")\n  me._fst.end()\n  // my .end() is coming later.\n}\n"]}