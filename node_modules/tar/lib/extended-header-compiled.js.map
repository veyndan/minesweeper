{"version":3,"sources":["extended-header.js"],"names":[],"mappings":"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","file":"extended-header-compiled.js","sourcesContent":["// An Entry consisting of:\n//\n// \"%d %s=%s\\n\", <length>, <keyword>, <value>\n//\n// The length is a decimal number, and includes itself and the \\n\n// \\0 does not terminate anything.  Only the length terminates the string.\n// Numeric values are decimal strings.\n\nmodule.exports = ExtendedHeader\n\nvar Entry = require(\"./entry.js\")\n  , inherits = require(\"inherits\")\n  , tar = require(\"../tar.js\")\n  , numeric = tar.numeric\n  , keyTrans = { \"SCHILY.dev\": \"dev\"\n               , \"SCHILY.ino\": \"ino\"\n               , \"SCHILY.nlink\": \"nlink\" }\n\nfunction ExtendedHeader () {\n  Entry.apply(this, arguments)\n  this.on(\"data\", this._parse)\n  this.fields = {}\n  this._position = 0\n  this._fieldPos = 0\n  this._state = SIZE\n  this._sizeBuf = []\n  this._keyBuf = []\n  this._valBuf = []\n  this._size = -1\n  this._key = \"\"\n}\n\ninherits(ExtendedHeader, Entry)\nExtendedHeader.prototype._parse = parse\n\nvar s = 0\n  , states = ExtendedHeader.states = {}\n  , SIZE = states.SIZE = s++\n  , KEY  = states.KEY  = s++\n  , VAL  = states.VAL  = s++\n  , ERR  = states.ERR  = s++\n\nObject.keys(states).forEach(function (s) {\n  states[states[s]] = states[s]\n})\n\nstates[s] = null\n\n// char code values for comparison\nvar _0 = \"0\".charCodeAt(0)\n  , _9 = \"9\".charCodeAt(0)\n  , point = \".\".charCodeAt(0)\n  , a = \"a\".charCodeAt(0)\n  , Z = \"Z\".charCodeAt(0)\n  , a = \"a\".charCodeAt(0)\n  , z = \"z\".charCodeAt(0)\n  , space = \" \".charCodeAt(0)\n  , eq = \"=\".charCodeAt(0)\n  , cr = \"\\n\".charCodeAt(0)\n\nfunction parse (c) {\n  if (this._state === ERR) return\n\n  for ( var i = 0, l = c.length\n      ; i < l\n      ; this._position++, this._fieldPos++, i++) {\n    // console.error(\"top of loop, size=\"+this._size)\n\n    var b = c[i]\n\n    if (this._size >= 0 && this._fieldPos > this._size) {\n      error(this, \"field exceeds length=\"+this._size)\n      return\n    }\n\n    switch (this._state) {\n      case ERR: return\n\n      case SIZE:\n        // console.error(\"parsing size, b=%d, rest=%j\", b, c.slice(i).toString())\n        if (b === space) {\n          this._state = KEY\n          // this._fieldPos = this._sizeBuf.length\n          this._size = parseInt(new Buffer(this._sizeBuf).toString(), 10)\n          this._sizeBuf.length = 0\n          continue\n        }\n        if (b < _0 || b > _9) {\n          error(this, \"expected [\" + _0 + \"..\" + _9 + \"], got \" + b)\n          return\n        }\n        this._sizeBuf.push(b)\n        continue\n\n      case KEY:\n        // can be any char except =, not > size.\n        if (b === eq) {\n          this._state = VAL\n          this._key = new Buffer(this._keyBuf).toString()\n          if (keyTrans[this._key]) this._key = keyTrans[this._key]\n          this._keyBuf.length = 0\n          continue\n        }\n        this._keyBuf.push(b)\n        continue\n\n      case VAL:\n        // field must end with cr\n        if (this._fieldPos === this._size - 1) {\n          // console.error(\"finished with \"+this._key)\n          if (b !== cr) {\n            error(this, \"expected \\\\n at end of field\")\n            return\n          }\n          var val = new Buffer(this._valBuf).toString()\n          if (numeric[this._key]) {\n            val = parseFloat(val)\n          }\n          this.fields[this._key] = val\n\n          this._valBuf.length = 0\n          this._state = SIZE\n          this._size = -1\n          this._fieldPos = -1\n          continue\n        }\n        this._valBuf.push(b)\n        continue\n    }\n  }\n}\n\nfunction error (me, msg) {\n  msg = \"invalid header: \" + msg\n      + \"\\nposition=\" + me._position\n      + \"\\nfield position=\" + me._fieldPos\n\n  me.error(msg)\n  me.state = ERR\n}\n"]}