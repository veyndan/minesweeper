{"version":3,"sources":["buffer-entry.js"],"names":[],"mappings":";;;;;;;AAOA,OAAO,OAAP,GAAiB,WAAjB;;AAEA,IAAI,WAAW,QAAQ,UAAR,CAAf;AAAA,IACI,QAAQ,QAAQ,YAAR,CADZ;;AAGA,SAAS,WAAT,GAAwB;AACtB,QAAM,KAAN,CAAY,IAAZ,EAAkB,SAAlB;AACA,OAAK,OAAL,GAAe,IAAI,MAAJ,CAAW,KAAK,KAAL,CAAW,IAAtB,CAAf;AACA,OAAK,OAAL,GAAe,CAAf;AACA,OAAK,IAAL,GAAY,EAAZ;AACA,OAAK,EAAL,CAAQ,KAAR,EAAe,YAAY;AACzB,SAAK,IAAL,GAAY,KAAK,OAAL,CAAa,QAAb,GAAwB,KAAxB,CAA8B,CAA9B,EAAiC,CAAC,CAAlC,CAAZ;AACD,GAFD;AAGD;;AAED,SAAS,WAAT,EAAsB,KAAtB;;;AAGA,YAAY,SAAZ,CAAsB,KAAtB,GAA8B,UAAU,CAAV,EAAa;AACzC,IAAE,IAAF,CAAO,KAAK,OAAZ,EAAqB,KAAK,OAA1B;AACA,OAAK,OAAL,IAAgB,EAAE,MAAlB;AACA,QAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,IAA3B,EAAiC,CAAjC;AACD,CAJD","file":"buffer-entry-compiled.js","sourcesContent":["// just like the Entry class, but it buffers the contents\n//\n// XXX It would be good to set a maximum BufferEntry filesize,\n// since it eats up memory.  In normal operation,\n// these are only for long filenames or link names, which are\n// rarely very big.\n\nmodule.exports = BufferEntry\n\nvar inherits = require(\"inherits\")\n  , Entry = require(\"./entry.js\")\n\nfunction BufferEntry () {\n  Entry.apply(this, arguments)\n  this._buffer = new Buffer(this.props.size)\n  this._offset = 0\n  this.body = \"\"\n  this.on(\"end\", function () {\n    this.body = this._buffer.toString().slice(0, -1)\n  })\n}\n\ninherits(BufferEntry, Entry)\n\n// collect the bytes as they come in.\nBufferEntry.prototype.write = function (c) {\n  c.copy(this._buffer, this._offset)\n  this._offset += c.length\n  Entry.prototype.write.call(this, c)\n}\n"]}