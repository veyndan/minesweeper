{"version":3,"sources":["dir-reader.js"],"names":[],"mappings":"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","file":"dir-reader-compiled.js","sourcesContent":["// A thing that emits \"entry\" events with Reader objects\n// Pausing it causes it to stop emitting entry events, and also\n// pauses the current entry if there is one.\n\nmodule.exports = DirReader\n\nvar fs = require(\"graceful-fs\")\n  , fstream = require(\"../fstream.js\")\n  , Reader = fstream.Reader\n  , inherits = require(\"inherits\")\n  , mkdir = require(\"mkdirp\")\n  , path = require(\"path\")\n  , Reader = require(\"./reader.js\")\n  , assert = require(\"assert\").ok\n\ninherits(DirReader, Reader)\n\nfunction DirReader (props) {\n  var me = this\n  if (!(me instanceof DirReader)) throw new Error(\n    \"DirReader must be called as constructor.\")\n\n  // should already be established as a Directory type\n  if (props.type !== \"Directory\" || !props.Directory) {\n    throw new Error(\"Non-directory type \"+ props.type)\n  }\n\n  me.entries = null\n  me._index = -1\n  me._paused = false\n  me._length = -1\n\n  if (props.sort) {\n    this.sort = props.sort\n  }\n\n  Reader.call(this, props)\n}\n\nDirReader.prototype._getEntries = function () {\n  var me = this\n\n  // race condition.  might pause() before calling _getEntries,\n  // and then resume, and try to get them a second time.\n  if (me._gotEntries) return\n  me._gotEntries = true\n\n  fs.readdir(me._path, function (er, entries) {\n    if (er) return me.error(er)\n\n    me.entries = entries\n\n    me.emit(\"entries\", entries)\n    if (me._paused) me.once(\"resume\", processEntries)\n    else processEntries()\n\n    function processEntries () {\n      me._length = me.entries.length\n      if (typeof me.sort === \"function\") {\n        me.entries = me.entries.sort(me.sort.bind(me))\n      }\n      me._read()\n    }\n  })\n}\n\n// start walking the dir, and emit an \"entry\" event for each one.\nDirReader.prototype._read = function () {\n  var me = this\n\n  if (!me.entries) return me._getEntries()\n\n  if (me._paused || me._currentEntry || me._aborted) {\n    // console.error(\"DR paused=%j, current=%j, aborted=%j\", me._paused, !!me._currentEntry, me._aborted)\n    return\n  }\n\n  me._index ++\n  if (me._index >= me.entries.length) {\n    if (!me._ended) {\n      me._ended = true\n      me.emit(\"end\")\n      me.emit(\"close\")\n    }\n    return\n  }\n\n  // ok, handle this one, then.\n\n  // save creating a proxy, by stat'ing the thing now.\n  var p = path.resolve(me._path, me.entries[me._index])\n  assert(p !== me._path)\n  assert(me.entries[me._index])\n\n  // set this to prevent trying to _read() again in the stat time.\n  me._currentEntry = p\n  fs[ me.props.follow ? \"stat\" : \"lstat\" ](p, function (er, stat) {\n    if (er) return me.error(er)\n\n    var who = me._proxy || me\n\n    stat.path = p\n    stat.basename = path.basename(p)\n    stat.dirname = path.dirname(p)\n    var childProps = me.getChildProps.call(who, stat)\n    childProps.path = p\n    childProps.basename = path.basename(p)\n    childProps.dirname = path.dirname(p)\n\n    var entry = Reader(childProps, stat)\n\n    // console.error(\"DR Entry\", p, stat.size)\n\n    me._currentEntry = entry\n\n    // \"entry\" events are for direct entries in a specific dir.\n    // \"child\" events are for any and all children at all levels.\n    // This nomenclature is not completely final.\n\n    entry.on(\"pause\", function (who) {\n      if (!me._paused && !entry._disowned) {\n        me.pause(who)\n      }\n    })\n\n    entry.on(\"resume\", function (who) {\n      if (me._paused && !entry._disowned) {\n        me.resume(who)\n      }\n    })\n\n    entry.on(\"stat\", function (props) {\n      me.emit(\"_entryStat\", entry, props)\n      if (entry._aborted) return\n      if (entry._paused) entry.once(\"resume\", function () {\n        me.emit(\"entryStat\", entry, props)\n      })\n      else me.emit(\"entryStat\", entry, props)\n    })\n\n    entry.on(\"ready\", function EMITCHILD () {\n      // console.error(\"DR emit child\", entry._path)\n      if (me._paused) {\n        // console.error(\"  DR emit child - try again later\")\n        // pause the child, and emit the \"entry\" event once we drain.\n        // console.error(\"DR pausing child entry\")\n        entry.pause(me)\n        return me.once(\"resume\", EMITCHILD)\n      }\n\n      // skip over sockets.  they can't be piped around properly,\n      // so there's really no sense even acknowledging them.\n      // if someone really wants to see them, they can listen to\n      // the \"socket\" events.\n      if (entry.type === \"Socket\") {\n        me.emit(\"socket\", entry)\n      } else {\n        me.emitEntry(entry)\n      }\n    })\n\n    var ended = false\n    entry.on(\"close\", onend)\n    entry.on(\"disown\", onend)\n    function onend () {\n      if (ended) return\n      ended = true\n      me.emit(\"childEnd\", entry)\n      me.emit(\"entryEnd\", entry)\n      me._currentEntry = null\n      if (!me._paused) {\n        me._read()\n      }\n    }\n\n    // XXX Remove this.  Works in node as of 0.6.2 or so.\n    // Long filenames should not break stuff.\n    entry.on(\"error\", function (er) {\n      if (entry._swallowErrors) {\n        me.warn(er)\n        entry.emit(\"end\")\n        entry.emit(\"close\")\n      } else {\n        me.emit(\"error\", er)\n      }\n    })\n\n    // proxy up some events.\n    ; [ \"child\"\n      , \"childEnd\"\n      , \"warn\"\n      ].forEach(function (ev) {\n        entry.on(ev, me.emit.bind(me, ev))\n      })\n  })\n}\n\nDirReader.prototype.disown = function (entry) {\n  entry.emit(\"beforeDisown\")\n  entry._disowned = true\n  entry.parent = entry.root = null\n  if (entry === this._currentEntry) {\n    this._currentEntry = null\n  }\n  entry.emit(\"disown\")\n}\n\nDirReader.prototype.getChildProps = function (stat) {\n  return { depth: this.depth + 1\n         , root: this.root || this\n         , parent: this\n         , follow: this.follow\n         , filter: this.filter\n         , sort: this.props.sort\n         , hardlinks: this.props.hardlinks\n         }\n}\n\nDirReader.prototype.pause = function (who) {\n  var me = this\n  if (me._paused) return\n  who = who || me\n  me._paused = true\n  if (me._currentEntry && me._currentEntry.pause) {\n    me._currentEntry.pause(who)\n  }\n  me.emit(\"pause\", who)\n}\n\nDirReader.prototype.resume = function (who) {\n  var me = this\n  if (!me._paused) return\n  who = who || me\n\n  me._paused = false\n  // console.error(\"DR Emit Resume\", me._path)\n  me.emit(\"resume\", who)\n  if (me._paused) {\n    // console.error(\"DR Re-paused\", me._path)\n    return\n  }\n\n  if (me._currentEntry) {\n    if (me._currentEntry.resume) me._currentEntry.resume(who)\n  } else me._read()\n}\n\nDirReader.prototype.emitEntry = function (entry) {\n  this.emit(\"entry\", entry)\n  this.emit(\"child\", entry)\n}\n"]}