{"version":3,"sources":["touchaction.js"],"names":[],"mappings":"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","file":"touchaction-compiled.js","sourcesContent":["var PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n"]}