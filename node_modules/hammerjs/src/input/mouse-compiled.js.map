{"version":3,"sources":["mouse.js"],"names":[],"mappings":"AAAA,IAAI,kBAAkB;AAClB,eAAW,WADO;AAElB,eAAW,UAFO;AAGlB,aAAS;AAHS,CAAtB;;AAMA,IAAI,uBAAuB,WAA3B;AACA,IAAI,sBAAsB,mBAA1B;;;;;;;AAOA,SAAS,UAAT,GAAsB;AAClB,SAAK,IAAL,GAAY,oBAAZ;AACA,SAAK,KAAL,GAAa,mBAAb;;AAEA,SAAK,OAAL,GAAe,KAAf,C;;AAEA,UAAM,KAAN,CAAY,IAAZ,EAAkB,SAAlB;AACH;;AAED,QAAQ,UAAR,EAAoB,KAApB,EAA2B;;;;;AAKvB,aAAS,SAAS,SAAT,CAAmB,EAAnB,EAAuB;AAC5B,YAAI,YAAY,gBAAgB,GAAG,IAAnB,CAAhB;;;AAGA,YAAI,YAAY,WAAZ,IAA2B,GAAG,MAAH,KAAc,CAA7C,EAAgD;AAC5C,iBAAK,OAAL,GAAe,IAAf;AACH;;AAED,YAAI,YAAY,UAAZ,IAA0B,GAAG,KAAH,KAAa,CAA3C,EAA8C;AAC1C,wBAAY,SAAZ;AACH;;;AAGD,YAAI,CAAC,KAAK,OAAV,EAAmB;AACf;AACH;;AAED,YAAI,YAAY,SAAhB,EAA2B;AACvB,iBAAK,OAAL,GAAe,KAAf;AACH;;AAED,aAAK,QAAL,CAAc,KAAK,OAAnB,EAA4B,SAA5B,EAAuC;AACnC,sBAAU,CAAC,EAAD,CADyB;AAEnC,6BAAiB,CAAC,EAAD,CAFkB;AAGnC,yBAAa,gBAHsB;AAInC,sBAAU;AAJyB,SAAvC;AAMH;AAhCsB,CAA3B","file":"mouse-compiled.js","sourcesContent":["var MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n"]}