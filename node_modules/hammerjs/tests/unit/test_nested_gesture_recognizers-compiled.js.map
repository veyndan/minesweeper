{"version":3,"sources":["test_nested_gesture_recognizers.js"],"names":[],"mappings":"AAAA,IAAI,MAAJ,EACI,KADJ,EAEI,WAFJ,EAGI,YAHJ;;AAKA,OAAO,qDAAP,EAA8D;AAC1D,WAAO,YAAW;AACd,iBAAS,SAAS,aAAT,CAAuB,KAAvB,CAAT;AACA,gBAAQ,SAAS,aAAT,CAAuB,KAAvB,CAAR;;AAEA,iBAAS,cAAT,CAAwB,eAAxB,EAAyC,WAAzC,CAAqD,MAArD;AACA,eAAO,WAAP,CAAmB,KAAnB;;AAEA,uBAAe,IAAI,OAAO,OAAX,CAAmB,MAAnB,EAA2B;AACtC,yBAAa;AADyB,SAA3B,CAAf;AAGA,sBAAc,IAAI,OAAO,OAAX,CAAmB,KAAnB,EAA0B;AACpC,yBAAa;AADuB,SAA1B,CAAd;;AAIA,oBAAY,GAAZ,CAAgB,IAAI,OAAO,GAAX,EAAhB;AACA,qBAAa,GAAb,CAAiB,IAAI,OAAO,GAAX,CAAe,EAAC,WAAW,CAAZ,EAAe,UAAU,CAAzB,EAAf,CAAjB;AACH,KAjByD;AAkB1D,cAAU,YAAW;AACjB,oBAAY,OAAZ;AACA,qBAAa,OAAb;AACH;AArByD,CAA9D;;AAwBA,KAAK,kBAAL,EAAyB,YAAW;AAChC,WAAO,CAAP;;AAEA,gBAAY,EAAZ,CAAe,KAAf,EAAsB,YAAW;AAC7B,WAAG,IAAH;AACH,KAFD;AAGA,iBAAa,EAAb,CAAgB,KAAhB,EAAuB,YAAW;AAC9B,cAAM,IAAI,KAAJ,CAAU,+BAAV,CAAN;AACH,KAFD;;AAIA,UAAM,kBAAN,CAAyB,KAAzB,EAAgC,OAAhC,EAAyC,CAAzC,EAA4C,EAA5C;AACA,UAAM,kBAAN,CAAyB,KAAzB,EAAgC,KAAhC,EAAuC,CAAvC,EAA0C,EAA1C;AACH,CAZD;;AAcA,KAAK,iFAAL,EAAwF,YAAW;AAC/F,WAAO,CAAP;;AAEA,gBAAY,EAAZ,CAAe,KAAf,EAAsB,YAAW;AAC7B,cAAM,IAAI,KAAJ,CAAU,+BAAV,CAAN;AACH,KAFD;AAGA,iBAAa,EAAb,CAAgB,QAAhB,EAA0B,YAAW;AACjC,WAAG,IAAH;AACH,KAFD;;AAIA,UAAM,kBAAN,CAAyB,KAAzB,EAAgC,OAAhC,EAAyC,EAAzC,EAA6C,CAA7C;AACA,UAAM,kBAAN,CAAyB,KAAzB,EAAgC,MAAhC,EAAwC,EAAxC,EAA4C,CAA5C;AACA,UAAM,kBAAN,CAAyB,KAAzB,EAAgC,KAAhC,EAAuC,EAAvC,EAA2C,CAA3C;AAEH,CAdD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA,IAAI,cAAc,GAAlB;AACA,OAAO,uDAAP,EAAgE;AAC5D,WAAO,YAAW;AACd,iBAAS,SAAS,aAAT,CAAuB,KAAvB,CAAT;AACA,gBAAQ,SAAS,aAAT,CAAuB,KAAvB,CAAR;;AAEA,iBAAS,cAAT,CAAwB,eAAxB,EAAyC,WAAzC,CAAqD,MAArD;AACA,eAAO,WAAP,CAAmB,KAAnB;;AAEA,uBAAe,IAAI,OAAO,OAAX,CAAmB,MAAnB,EAA2B;AACtC,yBAAa;AADyB,SAA3B,CAAf;AAGA,sBAAc,IAAI,OAAO,OAAX,CAAmB,KAAnB,EAA0B;AACpC,yBAAa;AADuB,SAA1B,CAAd;;AAIA,oBAAY,GAAZ,CAAgB,IAAI,OAAO,KAAX,CAAiB,EAAC,MAAM,WAAP,EAAjB,CAAhB;AACA,qBAAa,GAAb,CAAiB,IAAI,OAAO,GAAX,CAAe,EAAC,WAAW,CAAZ,EAAe,UAAU,CAAzB,EAAf,CAAjB;AACH,KAjB2D;AAkB5D,cAAU,YAAW;AACjB,oBAAY,OAAZ;AACA,qBAAa,OAAb;AACH;AArB2D,CAAhE;;AAwBA,KAAK,oBAAL,EAA2B,YAAW;AAClC,WAAO,CAAP;;AAEA,gBAAY,EAAZ,CAAe,OAAf,EAAwB,YAAW;AAC/B,WAAG,IAAH;AACH,KAFD;AAGA,iBAAa,EAAb,CAAgB,OAAhB,EAAyB,YAAW;AAChC,cAAM,IAAI,KAAJ,CAAU,iCAAV,CAAN;AACH,KAFD;;AAIA,UAAM,kBAAN,CAAyB,KAAzB,EAAgC,OAAhC,EAAyC,CAAzC,EAA4C,EAA5C;;AAEA;;AAEA,eAAW,YAAW;AAClB;AACH,KAFD,EAEG,WAFH;AAGH,CAjBD;;AAmBA,KAAK,iFAAL,EAAwF,YAAW;AAC/F,WAAO,CAAP;AACA,gBAAY,EAAZ,CAAe,OAAf,EAAwB,YAAW;AAC/B,WAAG,IAAH;AACH,KAFD;AAGA,iBAAa,EAAb,CAAgB,QAAhB,EAA0B,YAAW;AACjC,WAAG,IAAH;AACH,KAFD;;AAIA,UAAM,kBAAN,CAAyB,KAAzB,EAAgC,OAAhC,EAAyC,CAAzC,EAA4C,EAA5C;AACA;;AAEA,eAAW,YAAW;AAClB;;AAEA,cAAM,kBAAN,CAAyB,KAAzB,EAAgC,MAAhC,EAAwC,EAAxC,EAA4C,EAA5C;AACA,cAAM,kBAAN,CAAyB,KAAzB,EAAgC,MAAhC,EAAwC,EAAxC,EAA4C,EAA5C;AACA,cAAM,kBAAN,CAAyB,KAAzB,EAAgC,MAAhC,EAAwC,EAAxC,EAA4C,EAA5C;AACA,cAAM,kBAAN,CAAyB,KAAzB,EAAgC,KAAhC,EAAuC,EAAvC,EAA2C,EAA3C;AAEH,KARD,EAQG,WARH;AASH,CArBD","file":"test_nested_gesture_recognizers-compiled.js","sourcesContent":["var parent,\n    child,\n    hammerChild,\n    hammerParent;\n\nmodule('Nested gesture recognizers (Tap Child + Pan Parent)', {\n    setup: function() {\n        parent = document.createElement('div');\n        child = document.createElement('div');\n\n        document.getElementById('qunit-fixture').appendChild(parent);\n        parent.appendChild(child);\n\n        hammerParent = new Hammer.Manager(parent, {\n            touchAction: 'none'\n        });\n        hammerChild = new Hammer.Manager(child, {\n            touchAction: 'none'\n        });\n\n        hammerChild.add(new Hammer.Tap());\n        hammerParent.add(new Hammer.Pan({threshold: 5, pointers: 1}));\n    },\n    teardown: function() {\n        hammerChild.destroy();\n        hammerParent.destroy();\n    }\n});\n\ntest('Tap on the child', function() {\n    expect(1);\n\n    hammerChild.on('tap', function() {\n        ok(true);\n    });\n    hammerParent.on('tap', function() {\n        throw new Error('tap should not fire on parent');\n    });\n\n    utils.dispatchTouchEvent(child, 'start', 0, 10);\n    utils.dispatchTouchEvent(child, 'end', 0, 10);\n});\n\ntest('Panning on the child should fire parent pan and should not fire child tap event', function() {\n    expect(1);\n\n    hammerChild.on('tap', function() {\n        throw new Error('tap should not fire on parent');\n    });\n    hammerParent.on('panend', function() {\n        ok(true);\n    });\n\n    utils.dispatchTouchEvent(child, 'start', 10, 0);\n    utils.dispatchTouchEvent(child, 'move', 20, 0);\n    utils.dispatchTouchEvent(child, 'end', 30, 0);\n\n});\n\n/*\n // test (optional pointers validation)\n test('Panning with one finger down on child, other on parent', function () {\n expect(1);\n\n var event,\n touches;\n\n hammerParent.on('panend', function () {\n ok(true);\n });\n\n // one finger one child\n utils.dispatchTouchEvent(child, 'start', 10, 0, 0);\n utils.dispatchTouchEvent(parent, 'start', 12, 0, 1);\n\n touches = [\n {clientX: 20, clientY: 0, identifier: 0 },\n {clientX: 20, clientY: 0, identifier: 1 }\n ];\n\n event = document.createEvent('Event');\n event.initEvent('touchmove', true, true);\n event.touches = touches;\n event.changedTouches = touches;\n\n parent.dispatchEvent(event);\n\n touches = [\n {clientX: 30, clientY: 0, identifier: 0 },\n {clientX: 30, clientY: 0, identifier: 1 }\n ];\n\n event = document.createEvent('Event');\n event.initEvent('touchend', true, true);\n event.touches = touches;\n event.changedTouches = touches;\n\n parent.dispatchEvent(event);\n });\n */\n\nvar pressPeriod = 600;\nmodule('Nested gesture recognizers (Press Child + Pan Parent)', {\n    setup: function() {\n        parent = document.createElement('div');\n        child = document.createElement('div');\n\n        document.getElementById('qunit-fixture').appendChild(parent);\n        parent.appendChild(child);\n\n        hammerParent = new Hammer.Manager(parent, {\n            touchAction: 'none'\n        });\n        hammerChild = new Hammer.Manager(child, {\n            touchAction: 'none'\n        });\n\n        hammerChild.add(new Hammer.Press({time: pressPeriod}));\n        hammerParent.add(new Hammer.Pan({threshold: 5, pointers: 1}));\n    },\n    teardown: function() {\n        hammerChild.destroy();\n        hammerParent.destroy();\n    }\n});\n\ntest('Press on the child', function() {\n    expect(1);\n\n    hammerChild.on('press', function() {\n        ok(true);\n    });\n    hammerParent.on('press', function() {\n        throw new Error('press should not fire on parent');\n    });\n\n    utils.dispatchTouchEvent(child, 'start', 0, 10);\n\n    stop();\n\n    setTimeout(function() {\n        start();\n    }, pressPeriod);\n});\n\ntest('When Press is followed by Pan on the same element, both gestures are recognized', function() {\n    expect(2);\n    hammerChild.on('press', function() {\n        ok(true);\n    });\n    hammerParent.on('panend', function() {\n        ok(true);\n    });\n\n    utils.dispatchTouchEvent(child, 'start', 0, 10);\n    stop();\n\n    setTimeout(function() {\n        start();\n\n        utils.dispatchTouchEvent(child, 'move', 10, 10);\n        utils.dispatchTouchEvent(child, 'move', 20, 10);\n        utils.dispatchTouchEvent(child, 'move', 30, 10);\n        utils.dispatchTouchEvent(child, 'end', 30, 10);\n\n    }, pressPeriod);\n});\n"]}