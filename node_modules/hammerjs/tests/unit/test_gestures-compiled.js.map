{"version":3,"sources":["test_gestures.js"],"names":[],"mappings":"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","file":"test_gestures-compiled.js","sourcesContent":["// TODO: this tests fails because tapRecognizer changes\n// it could be that tapRecognizer setup its BEGAN state and\n// disable the other gesture recognition\nvar el, hammer, events;\nvar allGestureEvents = [\n    'tap doubletap press',\n    'pinch pinchin pinchout pinchstart pinchmove pinchend pinchcancel',\n    'rotate rotatestart rotatemove rotateend rotatecancel',\n    'pan panstart panmove panup pandown panleft panright panend pancancel',\n    'swipe swipeleft swiperight swipeup swipedown'\n].join(' ');\n\nmodule('Gesture recognition', {\n    setup: function() {\n        el = utils.createHitArea();\n        hammer = new Hammer(el);\n        hammer.get('pinch')\n            .set({ // some threshold, since the simulator doesnt stays at scale:1 when rotating\n                enable: true,\n                threshold: .1\n            });\n\n        hammer.get('rotate')\n            .set({ enable: true });\n\n        hammer.on(allGestureEvents, function(ev) {\n            events[ev.type] = true;\n        });\n        events = {};\n    },\n    teardown: function() {\n        hammer && hammer.destroy();\n        events = null;\n    }\n});\n\nasyncTest('recognize pan', function() {\n    expect(1);\n\n    Simulator.gestures.pan(el, { duration: 500, deltaX: 100, deltaY: 0 }, function() {\n        start();\n        deepEqual(events, {\n            pan: true,\n            panstart: true,\n            panmove: true,\n            panright: true,\n            panend: true\n        });\n    });\n});\n\nasyncTest('recognize press', function() {\n    expect(1);\n\n    Simulator.gestures.press(el, null, function() {\n        start();\n        deepEqual(events, {\n            press: true\n        });\n    });\n});\n\nasyncTest('recognize swipe', function() {\n    expect(1);\n\n    Simulator.gestures.swipe(el, { duration: 300, deltaX: 400, deltaY: 0 }, function() {\n        start();\n        deepEqual(events, {\n            pan: true,\n            panstart: true,\n            panmove: true,\n            panright: true,\n            panend: true,\n            swipe: true,\n            swiperight: true\n        });\n    });\n});\n\nasyncTest('recognize pinch', function() {\n    expect(1);\n\n    Simulator.gestures.pinch(el, { duration: 500, scale: .5 }, function() {\n        start();\n        deepEqual(events, {\n            pinch: true,\n            pinchstart: true,\n            pinchmove: true,\n            pinchend: true,\n            pinchin: true\n        });\n    });\n});\n\nasyncTest('recognize children multitouch pinch', function() {\n    expect(1);\n\n    var el1 = utils.createHitArea(el),\n        el2 = utils.createHitArea(el);\n\n    Simulator.gestures.pinch([el1, el2], { duration: 500, scale: .5 }, function() {\n        start();\n        deepEqual(events, {\n            pinch: true,\n            pinchstart: true,\n            pinchmove: true,\n            pinchend: true,\n            pinchin: true\n        });\n    });\n});\n\nasyncTest('recognize parent-child multitouch pinch', function() {\n    expect(1);\n\n    var el1 = utils.createHitArea(el);\n\n    Simulator.gestures.pinch([el, el1], { duration: 100, scale: .5 }, function() {\n        start();\n        deepEqual(events, {\n            pinch: true,\n            pinchstart: true,\n            pinchmove: true,\n            pinchend: true,\n            pinchin: true\n        });\n    });\n});\n\nasyncTest('recognize rotate', function() {\n    expect(1);\n\n    Simulator.gestures.rotate(el, { duration: 500, scale: 1 }, function() {\n        start();\n        deepEqual(events, {\n            rotate: true,\n            rotatestart: true,\n            rotatemove: true,\n            rotateend: true\n        });\n    });\n});\n\nasyncTest('recognize multitouch rotate', function() {\n    expect(1);\n\n    var el1 = utils.createHitArea(el);\n\n    Simulator.gestures.rotate([el, el1], { duration: 500, scale: 1 }, function() {\n        start();\n        deepEqual(events, {\n            rotate: true,\n            rotatestart: true,\n            rotatemove: true,\n            rotateend: true\n        });\n    });\n});\n\nasyncTest('recognize rotate and pinch simultaneous', function() {\n    expect(1);\n\n    Simulator.gestures.pinchRotate(el, { duration: 500, scale: 2 }, function() {\n        start();\n        deepEqual(events, {\n            rotate: true,\n            rotatestart: true,\n            rotatemove: true,\n            rotateend: true,\n            pinch: true,\n            pinchstart: true,\n            pinchmove: true,\n            pinchend: true,\n            pinchout: true\n        });\n    });\n});\n\nasyncTest('don\\'t recognize pan and swipe when moving down, when only horizontal is allowed', function() {\n    expect(1);\n\n    Simulator.gestures.swipe(el, { duration: 250, deltaX: 0, deltaZ: 200 }, function() {\n        start();\n        deepEqual(events, { });\n    });\n});\n\nasyncTest('don\\'t recognize press if duration is too short.', function() {\n    expect(1);\n\n    Simulator.gestures.press(el, { duration: 240 });\n\n    setTimeout(function() {\n        start();\n        deepEqual(events, { tap: true }, 'Tap gesture has been recognized.');\n    }, 275);\n});\n\nasyncTest('don\\'t recognize tap if duration is too long.', function() {\n    expect(1);\n\n    Simulator.gestures.tap(el, { duration: 255 });\n\n    setTimeout(function() {\n        start();\n        deepEqual(events, { press: true }, 'Press gesture has been recognized.');\n    }, 275);\n});\n"]}