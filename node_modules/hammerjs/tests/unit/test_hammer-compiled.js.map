{"version":3,"sources":["test_hammer.js"],"names":[],"mappings":"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","file":"test_hammer-compiled.js","sourcesContent":["var el, el2,\n    hammer, hammer2;\n\nmodule('Tests', {\n    setup: function() {\n        el = utils.createHitArea();\n        el2 = utils.createHitArea();\n    },\n\n    teardown: function() {\n        if (hammer) {\n            hammer.destroy();\n            hammer = null;\n        }\n        if (hammer2) {\n            hammer2.destroy();\n            hammer2 = null;\n        }\n    }\n});\n\ntest('hammer shortcut', function() {\n    expect(2);\n\n    Hammer.defaults.touchAction = 'pan-y';\n    hammer = Hammer(el);\n\n    ok(hammer instanceof Hammer.Manager, 'returns an instance of Manager');\n    ok(hammer.touchAction.actions == Hammer.defaults.touchAction, 'set the default touchAction');\n});\n\ntest('hammer shortcut with options', function() {\n    expect(2);\n\n    hammer = Hammer(el, {\n        touchAction: 'none'\n    });\n    ok(hammer instanceof Hammer.Manager, 'returns an instance of Manager');\n    ok(hammer.touchAction.actions == 'none', 'set the default touchAction');\n});\n\n/* Creating a hammer instance does not work on the same way\n * when using Hammer or Hammer.Manager.\n *\n * This can confuse developers who read tests to use the library when doc is missing.\n */\ntest('Hammer and Hammer.Manager constructors work exactly on the same way.', function() {\n    expect(2);\n\n    hammer = new Hammer(el, {});\n    equal(Hammer.defaults.preset.length, hammer.recognizers.length);\n\n    hammer2 = new Hammer.Manager(el, {});\n    equal(0, hammer2.recognizers.length);\n});\n\n/* DOC to disable default recognizers should be added.\n *\n * - Hammer(el).      IMO: Currently, well done.\n * - Hammer(el, {}) . IMO: should disable default recognizers\n * - Hammer(el, {recognizers: null}).      IMO: now, it fails.\n * - Hammer(el, {recognizers: []}).  It works, but it is likely not intuitive.\n */\ntest('A Hammer instance can be setup to not having default recognizers.', function() {\n    expect(1);\n\n    hammer = new Hammer(el, { recognizers: false });\n    equal(0, hammer.recognizers.length);\n});\n\n/* The case was when I added a custom tap event which was added to the default\n * recognizers, and my custom tap gesture wasn't working (I do not know exactly the reason),\n * but removing the default recognizers solved the issue.\n */\ntest('Adding the same recognizer type should remove the old recognizer', function() {\n    expect(4);\n\n    hammer = new Hammer(el);\n\n    ok(!!hammer.get('tap'));\n    equal(7, hammer.recognizers.length);\n\n    var newTap = new Hammer.Tap({time: 1337});\n    hammer.add(newTap);\n\n    equal(7, hammer.recognizers.length);\n    equal(1337, hammer.get('tap').options.time);\n});\n\n/*\n * Swipe gesture:\n * - in this tests, it does not update input.velocity ( always 0)\n * - does not fire swipeleft or swiperight events\n */\nasyncTest('Swiping to the left should fire swipeleft event', function() {\n    expect(2);\n\n    hammer = new Hammer(el, {recognizers: []});\n    hammer.add(new Hammer.Swipe());\n    hammer.on('swipe swipeleft', function() {\n        ok(true);\n    });\n\n    Simulator.gestures.swipe(el, {pos: [300, 300], deltaY: 0, deltaX: -200}, function() {\n        start();\n    });\n});\n\n/*\n * Input target change\n */\nasyncTest('Should detect input while on other element', function() {\n    expect(1);\n\n    hammer = new Hammer(el, { inputTarget: document.body });\n    hammer.on('tap', function() {\n        ok(true);\n    });\n\n    Simulator.gestures.tap(document.body, null, function() {\n        start();\n    });\n});\n\n/* Hammer.Manager constructor accepts a \"recognizers\" option in which each\n * element is an array representation of a Recognizer.\n */\ntest('Hammer.Manager accepts recognizers as arrays.', function() {\n    expect(4);\n\n    hammer = new Hammer.Manager(el, {\n        recognizers: [\n            [Hammer.Swipe],\n            [Hammer.Pinch],\n            [Hammer.Rotate],\n            [Hammer.Pan, { direction: Hammer.DIRECTION_UP }, ['swipe', 'pinch'], ['rotate']]\n        ]\n    });\n    equal(4, hammer.recognizers.length);\n\n    var recognizerActual = hammer.recognizers[3];\n    equal(recognizerActual.options.direction, Hammer.DIRECTION_UP);\n    equal(2, Object.keys(recognizerActual.simultaneous).length);\n    equal(1, recognizerActual.requireFail.length);\n});\n\n/*\n * Removing a recognizer which cannot be found would errantly remove the last recognizer in the\n * manager's list.\n */\ntest('Remove non-existent recognizer.', function() {\n    expect(1);\n\n    hammer = new Hammer(el, {recognizers: []});\n    hammer.add(new Hammer.Swipe());\n    hammer.remove('tap');\n\n    equal(1, hammer.recognizers.length);\n});\n\ntest('check whether Hammer.defaults.cssProps is restored', function() {\n    var beforeCssProps = {\n        userSelect: 'text',\n        touchSelect: 'grippers',\n        touchCallout: 'default',\n        contentZooming: 'chained',\n        userDrag: 'element',\n        tapHighlightColor: 'rgba(0, 1, 0, 0)'\n    };\n    var prop;\n    Hammer.each(Hammer.defaults.cssProps, function(value, name) {\n        prop = Hammer.prefixed(el.style, name);\n        if (prop) {\n            el.style[prop] = beforeCssProps[name];\n        }\n    });\n\n    hammer = Hammer(el);\n    hammer.destroy();\n    hammer = null;\n    Hammer.each(Hammer.defaults.cssProps, function(value, name) {\n        prop = Hammer.prefixed(el.style, name);\n        if (prop) {\n            equal(el.style[prop], beforeCssProps[name], \"check if \" + name + \" is restored\");\n        }\n    });\n});\n"]}