{"version":3,"sources":["test_jquery_plugin.js"],"names":[],"mappings":"AAAA,IAAI,EAAJ,EAAQ,MAAR,EAAgB,MAAhB;;AAEA,IAAI,mBAAmB,qDAAvB;;AAEA,OAAO,eAAP,EAAwB;AACpB,WAAO,YAAW;AACd,aAAK,MAAM,aAAN,EAAL;AACA,iBAAS,EAAT;AACH,KAJmB;AAKpB,cAAU,YAAW;AACjB,kBAAU,OAAO,OAAP,EAAV;AACH;AAPmB,CAAxB;;AAUA,UAAU,yBAAV,EAAqC,YAAW;AAC5C,WAAO,CAAP;;AAEA,MAAE,SAAF,CAAY,gBAAZ,EAA8B,YAAW;AACrC,eAAO,EAAP,EAAW,MAAX;AACA,eAAO,EAAP,EAAW,IAAX,CAAgB,sCAAhB,EAAwD,UAAS,EAAT,EAAa;AACjE,gBAAI,GAAG,OAAP,EAAgB;AACZ,uBAAO,GAAG,IAAV,IAAkB,IAAlB;AACH;AACJ,SAJD;;AAMA,kBAAU,QAAV,CAAmB,GAAnB,CAAuB,EAAvB,EAA2B,EAAE,QAAQ,EAAV,EAAc,QAAQ,CAAtB,EAA3B,EAAsD,YAAW;AAC7D;AACA,sBAAU,MAAV,EAAkB;AACd,qBAAK,IADS;AAEd,0BAAU,IAFI;AAGd,yBAAS,IAHK;AAId,0BAAU,IAJI;AAKd,wBAAQ;AALM,aAAlB;;AAQA,eAAG,OAAO,EAAP,EAAW,IAAX,CAAgB,QAAhB,aAAqC,OAAO,OAA/C,EAAwD,uCAAxD;AACH,SAXD;AAYH,KApBD;AAqBH,CAxBD;;AA0BA,UAAU,8CAAV,EAA0D,YAAW;AACjE,WAAO,CAAP;;AAEA,QAAI,SAAS,OAAO,EAAP,CAAb;AACA,WAAO,EAAP,CAAU,sCAAV,EAAkD,UAAS,EAAT,EAAa;AAC3D,eAAO,GAAG,IAAV,IAAkB,IAAlB;AACH,KAFD;;AAIA,cAAU,QAAV,CAAmB,GAAnB,CAAuB,EAAvB,EAA2B,EAAE,QAAQ,EAAV,EAAc,QAAQ,CAAtB,EAA3B,EAAsD,YAAW;AAC7D;AACA,kBAAU,MAAV,EAAkB;AACd,iBAAK,IADS;AAEd,sBAAU,IAFI;AAGd,qBAAS,IAHK;AAId,sBAAU,IAJI;AAKd,oBAAQ;AALM,SAAlB;AAOH,KATD;AAUH,CAlBD","file":"test_jquery_plugin-compiled.js","sourcesContent":["var el, hammer, events;\n\nvar jQueryPluginPath = '../../node_modules/jquery-hammerjs/jquery.hammer.js';\n\nmodule('jQuery plugin', {\n    setup: function() {\n        el = utils.createHitArea();\n        events = {};\n    },\n    teardown: function() {\n        hammer && hammer.destroy();\n    }\n});\n\nasyncTest('trigger pan with jQuery', function() {\n    expect(2);\n\n    $.getScript(jQueryPluginPath, function() {\n        jQuery(el).hammer();\n        jQuery(el).bind('panstart pan panmove panright panend', function(ev) {\n            if (ev.gesture) {\n                events[ev.type] = true;\n            }\n        });\n\n        Simulator.gestures.pan(el, { deltaX: 50, deltaY: 0 }, function() {\n            start();\n            deepEqual(events, {\n                pan: true,\n                panstart: true,\n                panmove: true,\n                panright: true,\n                panend: true\n            });\n\n            ok(jQuery(el).data('hammer') instanceof Hammer.Manager, 'data attribute refers to the instance');\n        });\n    });\n});\n\nasyncTest('trigger pan without jQuery should still work', function() {\n    expect(1);\n\n    var hammer = Hammer(el);\n    hammer.on('panstart pan panmove panright panend', function(ev) {\n        events[ev.type] = true;\n    });\n\n    Simulator.gestures.pan(el, { deltaX: 50, deltaY: 0 }, function() {\n        start();\n        deepEqual(events, {\n            pan: true,\n            panstart: true,\n            panmove: true,\n            panright: true,\n            panend: true\n        });\n    });\n});\n"]}