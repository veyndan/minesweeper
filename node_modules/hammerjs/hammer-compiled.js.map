{"version":3,"sources":["hammer.js"],"names":[],"mappings":"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","file":"hammer-compiled.js","sourcesContent":["/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n"]}