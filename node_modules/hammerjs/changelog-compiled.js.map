{"version":3,"sources":["changelog.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,QAAS,iBAAT,CAAhB;AACA,IAAI,UAAU,QAAS,UAAT,EAAsB,GAAtB,CAA2B,UAAU,KAAV,EAAiB,IAAjB,EAAwB;AAChE,KAAK,KAAL,EAAa;AACZ,QAAM,KAAN;AACA;AACD,SAAQ,GAAR,CAAa,KAAM,CAAN,IAAY,IAAZ,GAAmB,KAAM,CAAN,CAAhC;AACA,KAAI,UAAU,CAAE,OAAF,EAAW,YAAX,EAAyB,OAAzB,EAAkC,SAAlC,EAA6C,YAA7C,EAA2D,QAA3D,CAAd;AACA,WAAW;AACV,aAAW,mDADD;AAEV,aAAW,kDAFD;AAGV,QAAM,KAHI;AAIV,QAAM,IAJI;AAKV,cAAY,KAAM,CAAN,IAAY,IAAZ,GAAmB,KAAM,CAAN;AALrB,EAAX,EAMG,UAAU,KAAV,EAAiB,GAAjB,EAAuB;AACzB,MAAK,KAAL,EAAa;AACZ,SAAM,KAAN;AACA;AACD,QAAM,SAAU,GAAV,CAAN;AACA,UAAQ,GAAR,CAAa,GAAb;AACA,EAZD;AAaA,UAAS,QAAT,CAAmB,GAAnB,EAAyB;AACxB,MAAI,QAAQ,IAAI,KAAJ,CAAW,IAAX,CAAZ;AACA,MAAI,SAAS,EAAb;AACA,MAAI,MAAM,EAAV;AACA,MAAI,gBAAJ;;AAGA,QAAM,KAAN;AACA,QAAM,OAAN,CAAe,UAAU,IAAV,EAAiB;AAC/B,OAAI,UAAU,UAAW,IAAX,CAAd;AACA,OAAK,OAAL,EAAe;AACd,QAAI,IAAJ,CAAU,IAAV;AACA;AACD,GALD;AAMA,MAAI,MAAM,IAAI,IAAJ,CAAU,IAAV,CAAV;AACA,SAAO,IAAI,OAAJ,CAAa,KAAb,EAAoB,GAApB,EAA0B,OAA1B,CAAmC,iBAAnC,EAAsD,EAAtD,CAAP;AACA;AACD,UAAS,SAAT,CAAoB,IAApB,EAA2B;AAC1B,MAAI,QAAQ,SAAU,IAAV,CAAZ;;AAEA,MAAK,QAAQ,OAAR,CAAiB,MAAM,SAAvB,IAAqC,CAAC,CAA3C,EAA+C;AAC9C,UAAO,KAAP;AACA;AACD,SAAO,KAAP;AACA;AACD,UAAS,QAAT,CAAmB,IAAnB,EAA0B;AACzB,MAAI,QAAQ,KAAK,KAAL,CAAY,GAAZ,CAAZ;AACA,MAAI,YAAY,EAAhB;AACA,MAAI,OAAJ;AACA,MAAI,UAAU,KAAK,KAAL,CAAY,8BAAZ,CAAd;;AAEA,MAAK,MAAM,MAAN,GAAe,CAAf,IAAoB,MAAO,CAAP,EAAW,MAAX,IAAqB,EAA9C,EAAmD;AAClD,eAAY,MAAO,CAAP,CAAZ;AACA,SAAM,KAAN;AACA,aAAU,MAAM,IAAN,CAAY,GAAZ,CAAV;AACA,GAJD,MAIO;AACN,WAAQ,KAAK,KAAL,CAAY,GAAZ,CAAR;AACA,eAAY,MAAO,CAAP,CAAZ;AACA,SAAM,KAAN;AACA,aAAU,MAAM,IAAN,CAAY,GAAZ,CAAV;AACA;;AAED,MAAK,SAAL,EAAiB;AAChB,eAAY,UAAU,OAAV,CAAmB,OAAnB,EAA4B,EAA5B,CAAZ;AACA;AACD,SAAO;AACN,cAAW,SADL;AAEN,YAAS;AAFH,GAAP;AAIA;AACD,CArEa,CAAd","file":"changelog-compiled.js","sourcesContent":["var changelog = require( \"changelogplease\" );\nvar gittags = require( \"git-tags\" ).get( function( error, tags ) {\n\tif ( error ) {\n\t\tthrow error\n\t}\n\tconsole.log( tags[ 1 ] + \"..\" + tags[ 0 ] );\n\tvar exclude = [ \"Merge\", \"Whitespace\", \"Fixup\", \"Cleanup\", \"Formatting\", \"Ignore\" ];\n\tchangelog( {\n\t\tticketUrl: \"https://github.com/hammerjs/hammer.js/issues/{id}\",\n\t\tcommitUrl: \"https://github.com/hammerjs/hammerjs/commit/{id}\",\n\t\tsort: false,\n\t\trepo: \"./\",\n\t\tcommittish: tags[ 1 ] + \"..\" + tags[ 0 ]\n\t}, function( error, log ) {\n\t\tif ( error ) {\n\t\t\tthrow error;\n\t\t}\n\t\tlog = parseLog( log );\n\t\tconsole.log( log );\n\t} );\n\tfunction parseLog( log ) {\n\t\tvar lines = log.split( \"\\n\" );\n\t\tvar newLog = [];\n\t\tvar log = [];\n\t\tvar currentComponent;\n\n\t\t\n\t\tlines.shift();\n\t\tlines.forEach( function( line ) {\n\t\t\tvar newLine = parseLine( line );\n\t\t\tif ( newLine ) {\n\t\t\t\tlog.push( line );\n\t\t\t}\n\t\t} );\n\t\tvar log = log.join( \"\\n\" );\n\t\treturn log.replace( /\\*/g, \"-\" ).replace( /__TICKETREF__,/g, \"\" );\n\t}\n\tfunction parseLine( line ) {\n\t\tvar parts = getParts( line );\n\n\t\tif ( exclude.indexOf( parts.component ) > -1 ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn parts;\n\t}\n\tfunction getParts( line ) {\n\t\tvar parts = line.split( \":\" );\n\t\tvar component = \"\";\n\t\tvar message;\n\t\tvar commits = line.match( /\\{\\{([A-Za-z0-9 ]){0,99}\\}\\}/ )\n\n\t\tif ( parts.length > 1 && parts[ 0 ].length <= 20 ) {\n\t\t\tcomponent = parts[ 0 ];\n\t\t\tparts.shift();\n\t\t\tmessage = parts.join( \":\" );\n\t\t} else {\n\t\t\tparts = line.split( \" \" );\n\t\t\tcomponent = parts[ 1 ];\n\t\t\tparts.shift();\n\t\t\tmessage = parts.join( \" \" );\n\t\t}\n\n\t\tif ( component ) {\n\t\t\tcomponent = component.replace( /\\* |,/, \"\" );\n\t\t}\n\t\treturn {\n\t\t\tcomponent: component,\n\t\t\tmessage: message\n\t\t};\n\t}\n} );\n"]}